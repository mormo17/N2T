// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    Register(in=in, load=a, out=ares);
    Register(in=in, load=b, out=bres);
    Register(in=in, load=c, out=cres);
    Register(in=in, load=d, out=dres);
    Register(in=in, load=e, out=eres);
    Register(in=in, load=f, out=fres);
    Register(in=in, load=g, out=gres);
    Register(in=in, load=h, out=hres);
    
    Mux8Way16(a=ares, b=bres, c=cres, d=dres, e=eres, f=fres, g=gres, h=hres, sel=address, out=out);

}